name: Flutter CI
on: 
  push:
  pull_request:
    branches: 
      - master
      - app-release

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      workdir: ./app
      gh_token: ${{ secrets.GITHUB_TOKEN }}
    
    steps:    
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup Java
        uses: actions/setup-java@v1.4.3
        with:
          java-version: '11.x'
      - name: Flutter action
        uses: subosito/flutter-action@v1.4.0
      - name: Run flutter doctor
        working-directory: ${{env.workdir}}
        run: flutter doctor -v
      - name: Install dependencies
        working-directory: ${{env.workdir}}
        run: flutter pub get 
      - name: Format code
        working-directory: ${{env.workdir}}
        run: flutter format --set-exit-if-changed .
      - name: Analyse code
        working-directory: ${{env.workdir}}
        run: flutter analyze .
      - name: Run tests
        working-directory: ${{env.workdir}}
        run: flutter test
      - name: Build apk (debug mode)
        working-directory: ${{env.workdir}}
        run: flutter build apk --debug
      - name: Build apk (profile mode)
        working-directory: ${{env.workdir}}
        run: flutter build apk --profile
      - name: Build apk (release mode)
        working-directory: ${{env.workdir}}
        run: flutter build apk --release
        
      - name: Upload apk artifacts
        uses: actions/upload-artifact@master
        with:
          name: apks
          path: ./app/build/app/outputs/flutter-apk
          
#       - name: Create draft Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           tag_name: latest
#           release_name: latest
#           draft: true
#           prerelease: false
      
#       - name: Upload release asset
#         uses: actions/upload-release-asset@v1.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: ./app/build/app/outputs/flutter-apk
#           asset_name: apks.zip
#           asset_content_type: application/zip
        
#       - name: Publish release
#         uses: eregon/publish-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           release_id: ${{ steps.create_release.outputs.id }}
        
